version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  test_clojure:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: cimg/clojure:1.11.1
        environment: # environment variables for primary container
          LEIN_ROOT: nbd
          JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - run:
          name: Run Clojure tests
          command: cd clojure && sh runtests.sh

  test_elixir:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: cimg/elixir:1.17.2-erlang-26.2.1
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mix local.hex --force # install Hex locally (without prompt)
      - run:
          name: Run Elixir tests
          command: cd elixir && sh runtests.sh

  test_ruby:
    docker:
      # Primary container image where all steps run.
      - image: cimg/ruby:2.7.0
    steps: # commands that comprise the `build` job
      - checkout
      - run: gem install minitest
      - run:
          name: Run Ruby tests
          command: cd ruby && sh runtests.sh

  test_rust:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: cimg/rust:1.81.0
    steps: # commands that comprise the `build` job
      - checkout
      - run:
          name: Run Rust tests
          command: cd rust && sh runtests.sh

  test_ocaml:
    docker:
      # Primary container image where all steps run.
      - image: ocaml/opam:ubuntu-22.04-ocaml-5.3
    steps: # commands that comprise the `build` job
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install -y bubblewrap  # Required for opam
            opam init --disable-sandboxing --bare --yes
            cd ocaml && make install-ci
      - run:
          name: Run OCaml tests
          command: cd ocaml && sh runtests.sh
workflows:
  version: 2
  test_exercism:
    jobs:
      - test_clojure
      - test_elixir
      - test_ruby
      - test_rust
      - test_ocaml
