version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  test_clojure:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: circleci/clojure:lein-2.9.1
        environment: # environment variables for primary container
          LEIN_ROOT: nbd
          JVM_OPTS: -Xmx3200m # limit the maximum heap size to prevent out of memory errors
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - run:
          name: Run Clojure tests
          command: cd clojure && sh runtests.sh

  test_elixir:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: circleci/elixir:1.10.2
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mix local.hex --force # install Hex locally (without prompt)
      - run:
          name: Run Elixir tests
          command: cd elixir && sh runtests.sh

  test_ruby:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: circleci/ruby:2.7.0
    steps: # commands that comprise the `build` job
      - checkout # check out source code to working directory
      - run: gem install minitest # install minitest
      - run:
          name: Run Ruby tests
          command: cd ruby && sh runtests.sh

  test_rust:
    docker: # run the steps with Docker
      # Primary container image where all steps run.
      - image: circleci/rust:1.45.2
    steps: # commands that comprise the `build` job
      - checkout
      - run:
          name: Run Rust tests
          command: cd rust && sh runtests.sh
workflows:
  version: 2
  test_exercism:
    jobs:
      - test_clojure
      - test_elixir
      - test_ruby
      - test_rust
